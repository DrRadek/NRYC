//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Main/InputSystem/Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Controls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Controls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Controls"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""2495efb2-242c-4b2c-8d33-8e888144388c"",
            ""actions"": [
                {
                    ""name"": ""Walk"",
                    ""type"": ""Value"",
                    ""id"": ""9f1ecd4e-0091-4827-80ef-b461649efdc5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""NormalizeVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""3c2be6ca-fa5c-422f-b50b-bddac1f23bd8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse"",
                    ""type"": ""PassThrough"",
                    ""id"": ""68a93477-72a5-41e6-8e06-07f54d6eb054"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""624ad51e-86d5-4ed8-bd65-a60fa29aa54b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""be7c3112-ccab-44f4-bfdd-90a1e8b5d873"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeWeaponScroll"",
                    ""type"": ""Value"",
                    ""id"": ""a99a3db6-a207-42fc-970f-36bd9b9a0bbd"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Fire"",
                    ""type"": ""Button"",
                    ""id"": ""51458310-464a-4be1-a9d5-6b990d4020fc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwitchHands"",
                    ""type"": ""Button"",
                    ""id"": ""b8225624-f332-4f2e-b9ff-8b87a4949528"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Build"",
                    ""type"": ""Button"",
                    ""id"": ""208494e2-b328-4675-87bd-e032020a96d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FirePrimary"",
                    ""type"": ""Button"",
                    ""id"": ""5cf398c4-227f-4884-bbbc-380a3056640e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""FireSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""672daa1c-36dd-466a-a15a-1bb1012cb1b9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WalkUp"",
                    ""type"": ""Button"",
                    ""id"": ""b5bbb248-12a7-42ff-826b-6a3a18129913"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Button"",
                    ""id"": ""f7cbad9f-92e0-4564-a1c8-4c6c52e6b80b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractWithChair"",
                    ""type"": ""Button"",
                    ""id"": ""60666763-0d70-41df-8006-b80adceb1ce2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeCatSpeed"",
                    ""type"": ""Value"",
                    ""id"": ""02b854f7-3b72-4fe2-be67-7a20be8defed"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Repair"",
                    ""type"": ""Button"",
                    ""id"": ""7e65ea26-11d4-4c31-8ac3-afe38a4f14ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""HideUI"",
                    ""type"": ""Button"",
                    ""id"": ""74e61eca-9a49-403d-a5b7-1ce7baa092c3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""9befb73b-a55a-463f-9f8e-cd4044434f12"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""bb17cb5e-c5c6-4c73-9119-39746dfcc19a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""afdb1ef5-6afe-443e-8573-cc953d31a8d3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""9bb58cff-f5ed-49ac-a784-129bd66816da"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""54bf5e1c-034f-4ef1-ae8f-7703808ba747"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Walk"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b5f58bef-b6eb-4982-9451-d32465d25de8"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0d3a066-6549-4582-924c-60d9263582bc"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7d8c689b-2bb3-4d9d-8c41-5215e1a57f21"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Press(behavior=1)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce094487-3195-44ec-adba-f0decadabd1a"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4631043d-b5f2-452c-a6ae-d510380e9384"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeWeaponScroll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9def074d-268b-479c-abe1-d8803e217e24"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Fire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6ce349a5-e0ec-4059-89c1-64b9cef231bf"",
                    ""path"": ""<Keyboard>/semicolon"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHands"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8035f6a3-1e35-4058-bb2b-ac7317ba00a4"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwitchHands"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f3745128-c398-4c31-b91a-357d2772c887"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Build"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""22d9f1fa-22af-4759-b54f-3fd340ac4c94"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FirePrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2d12880-4732-4a07-bfbd-9f4a641917e0"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""FireSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""c69a1044-2cd6-4995-bf34-d70ce430522b"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WalkUp"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4caf8139-8a6c-4752-a7e2-c79204bbf792"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WalkUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""35dfa8d1-2b2b-4b0d-9482-298f94030735"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WalkUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""8ef72a01-649f-423d-b17e-a1dc678ca545"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""4c9219ee-858f-4ec3-bd21-abd5f81b207e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f39c4d8f-bbb5-449a-b385-2ce1c3e5e042"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fc5724fc-08d4-400c-b6a4-242dbb3f1f8e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""InteractWithChair"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""02d7c46a-47c2-4999-9c5e-c4df83177432"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCatSpeed"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""908ec223-793c-4c41-83d6-6ff8f3c23e7a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCatSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fe0e0b75-dd04-4708-8058-d6496cebd90f"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeCatSpeed"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""a54087f7-54c4-4af3-bd84-83cd1335314f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Repair"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8571b27a-54a5-4b74-8a8a-4183c18b58b1"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""HideUI"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""c1ab03a4-21ec-4c68-afdf-f533992ed744"",
            ""actions"": [
                {
                    ""name"": ""CursorSwitch"",
                    ""type"": ""Button"",
                    ""id"": ""fb2f48a5-a1a6-4ecc-b3d2-d09d94e2c2df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuOpen"",
                    ""type"": ""Button"",
                    ""id"": ""1e46980a-e417-4514-8dec-03b45d295c7a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CheatMenu"",
                    ""type"": ""Button"",
                    ""id"": ""03d27089-8613-4f7c-8ef6-996ca4120fd0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d5ce5823-dcd8-4dca-8dea-893209053866"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CursorSwitch"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5588ee5b-9b7e-4374-ae5b-0f293a578f31"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuOpen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""706ab400-bffd-44df-a6e5-755235af1eec"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CheatMenu"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""PlayerHandsWeapons"",
            ""id"": ""4ee96839-4efa-4b9f-8212-f8e0e26779bd"",
            ""actions"": [
                {
                    ""name"": ""1"",
                    ""type"": ""Button"",
                    ""id"": ""6fed0822-215a-4faf-929c-c03137b71602"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""2"",
                    ""type"": ""Button"",
                    ""id"": ""97855cf8-49c0-4a2a-b6ad-e4509c2a308e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""3"",
                    ""type"": ""Button"",
                    ""id"": ""f688a5eb-d13e-4163-9e02-476c70fc5f6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""4"",
                    ""type"": ""Button"",
                    ""id"": ""cfd4ba96-24a8-40d1-97b8-1ba5301c9150"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""5"",
                    ""type"": ""Button"",
                    ""id"": ""759d0bac-3390-4222-8915-3d30717c6790"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""6"",
                    ""type"": ""Button"",
                    ""id"": ""f38b2c86-4ee7-4af6-a3c2-1cf0e9551247"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""7"",
                    ""type"": ""Button"",
                    ""id"": ""7c224fc1-2e03-40fb-aff0-82fd9b8257ac"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""8"",
                    ""type"": ""Button"",
                    ""id"": ""111ecc93-0f85-498c-997c-105cf9951f1f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""9"",
                    ""type"": ""Button"",
                    ""id"": ""e3298ad9-d205-48e3-8a65-64bbb50e35bf"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""095bd339-fd8d-4b25-bb12-8c44a2c3e4c7"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5e695d94-4efb-4b6e-9639-1ffa25eb5ef6"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f6975a43-c66a-4384-adea-81874db29af6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""35d77d43-0a3f-421e-851d-6f06dd494562"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fe1d597-1b7f-4505-9f9b-3022eadba3ea"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7037b024-6a1a-47de-b500-e1e8546accf3"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e3a8403-a666-4297-8db8-59f2e1318232"",
                    ""path"": ""<Keyboard>/7"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""7"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9c242dd9-61f0-43cb-8423-c8fe3737ad05"",
                    ""path"": ""<Keyboard>/8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""8"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63ac659c-6475-4d14-b283-27a88829fe5c"",
                    ""path"": ""<Keyboard>/9"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""9"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WeaponEdit"",
            ""id"": ""4895dd5f-d983-485d-9881-53c0444c8a45"",
            ""actions"": [
                {
                    ""name"": ""OpenClose"",
                    ""type"": ""Button"",
                    ""id"": ""b15636ec-9959-4c5f-86d1-48702f5d07ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""03d90280-f28c-429b-a74e-b9484977a341"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""OpenClose"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Walk = m_Player.FindAction("Walk", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Mouse = m_Player.FindAction("Mouse", throwIfNotFound: true);
        m_Player_Run = m_Player.FindAction("Run", throwIfNotFound: true);
        m_Player_Reload = m_Player.FindAction("Reload", throwIfNotFound: true);
        m_Player_ChangeWeaponScroll = m_Player.FindAction("ChangeWeaponScroll", throwIfNotFound: true);
        m_Player_Fire = m_Player.FindAction("Fire", throwIfNotFound: true);
        m_Player_SwitchHands = m_Player.FindAction("SwitchHands", throwIfNotFound: true);
        m_Player_Build = m_Player.FindAction("Build", throwIfNotFound: true);
        m_Player_FirePrimary = m_Player.FindAction("FirePrimary", throwIfNotFound: true);
        m_Player_FireSecondary = m_Player.FindAction("FireSecondary", throwIfNotFound: true);
        m_Player_WalkUp = m_Player.FindAction("WalkUp", throwIfNotFound: true);
        m_Player_Rotate = m_Player.FindAction("Rotate", throwIfNotFound: true);
        m_Player_InteractWithChair = m_Player.FindAction("InteractWithChair", throwIfNotFound: true);
        m_Player_ChangeCatSpeed = m_Player.FindAction("ChangeCatSpeed", throwIfNotFound: true);
        m_Player_Repair = m_Player.FindAction("Repair", throwIfNotFound: true);
        m_Player_HideUI = m_Player.FindAction("HideUI", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_CursorSwitch = m_UI.FindAction("CursorSwitch", throwIfNotFound: true);
        m_UI_MenuOpen = m_UI.FindAction("MenuOpen", throwIfNotFound: true);
        m_UI_CheatMenu = m_UI.FindAction("CheatMenu", throwIfNotFound: true);
        // PlayerHandsWeapons
        m_PlayerHandsWeapons = asset.FindActionMap("PlayerHandsWeapons", throwIfNotFound: true);
        m_PlayerHandsWeapons__1 = m_PlayerHandsWeapons.FindAction("1", throwIfNotFound: true);
        m_PlayerHandsWeapons__2 = m_PlayerHandsWeapons.FindAction("2", throwIfNotFound: true);
        m_PlayerHandsWeapons__3 = m_PlayerHandsWeapons.FindAction("3", throwIfNotFound: true);
        m_PlayerHandsWeapons__4 = m_PlayerHandsWeapons.FindAction("4", throwIfNotFound: true);
        m_PlayerHandsWeapons__5 = m_PlayerHandsWeapons.FindAction("5", throwIfNotFound: true);
        m_PlayerHandsWeapons__6 = m_PlayerHandsWeapons.FindAction("6", throwIfNotFound: true);
        m_PlayerHandsWeapons__7 = m_PlayerHandsWeapons.FindAction("7", throwIfNotFound: true);
        m_PlayerHandsWeapons__8 = m_PlayerHandsWeapons.FindAction("8", throwIfNotFound: true);
        m_PlayerHandsWeapons__9 = m_PlayerHandsWeapons.FindAction("9", throwIfNotFound: true);
        // WeaponEdit
        m_WeaponEdit = asset.FindActionMap("WeaponEdit", throwIfNotFound: true);
        m_WeaponEdit_OpenClose = m_WeaponEdit.FindAction("OpenClose", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Walk;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Mouse;
    private readonly InputAction m_Player_Run;
    private readonly InputAction m_Player_Reload;
    private readonly InputAction m_Player_ChangeWeaponScroll;
    private readonly InputAction m_Player_Fire;
    private readonly InputAction m_Player_SwitchHands;
    private readonly InputAction m_Player_Build;
    private readonly InputAction m_Player_FirePrimary;
    private readonly InputAction m_Player_FireSecondary;
    private readonly InputAction m_Player_WalkUp;
    private readonly InputAction m_Player_Rotate;
    private readonly InputAction m_Player_InteractWithChair;
    private readonly InputAction m_Player_ChangeCatSpeed;
    private readonly InputAction m_Player_Repair;
    private readonly InputAction m_Player_HideUI;
    public struct PlayerActions
    {
        private @Controls m_Wrapper;
        public PlayerActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Walk => m_Wrapper.m_Player_Walk;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Mouse => m_Wrapper.m_Player_Mouse;
        public InputAction @Run => m_Wrapper.m_Player_Run;
        public InputAction @Reload => m_Wrapper.m_Player_Reload;
        public InputAction @ChangeWeaponScroll => m_Wrapper.m_Player_ChangeWeaponScroll;
        public InputAction @Fire => m_Wrapper.m_Player_Fire;
        public InputAction @SwitchHands => m_Wrapper.m_Player_SwitchHands;
        public InputAction @Build => m_Wrapper.m_Player_Build;
        public InputAction @FirePrimary => m_Wrapper.m_Player_FirePrimary;
        public InputAction @FireSecondary => m_Wrapper.m_Player_FireSecondary;
        public InputAction @WalkUp => m_Wrapper.m_Player_WalkUp;
        public InputAction @Rotate => m_Wrapper.m_Player_Rotate;
        public InputAction @InteractWithChair => m_Wrapper.m_Player_InteractWithChair;
        public InputAction @ChangeCatSpeed => m_Wrapper.m_Player_ChangeCatSpeed;
        public InputAction @Repair => m_Wrapper.m_Player_Repair;
        public InputAction @HideUI => m_Wrapper.m_Player_HideUI;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Walk.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalk;
                @Walk.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalk;
                @Walk.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalk;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Mouse.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Mouse.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMouse;
                @Run.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRun;
                @Reload.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnReload;
                @ChangeWeaponScroll.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponScroll;
                @ChangeWeaponScroll.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponScroll;
                @ChangeWeaponScroll.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeWeaponScroll;
                @Fire.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @Fire.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFire;
                @SwitchHands.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchHands;
                @SwitchHands.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchHands;
                @SwitchHands.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSwitchHands;
                @Build.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @Build.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @Build.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnBuild;
                @FirePrimary.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFirePrimary;
                @FirePrimary.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFirePrimary;
                @FireSecondary.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSecondary;
                @FireSecondary.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnFireSecondary;
                @WalkUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalkUp;
                @WalkUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalkUp;
                @WalkUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnWalkUp;
                @Rotate.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRotate;
                @InteractWithChair.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractWithChair;
                @InteractWithChair.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractWithChair;
                @InteractWithChair.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractWithChair;
                @ChangeCatSpeed.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeCatSpeed;
                @ChangeCatSpeed.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeCatSpeed;
                @ChangeCatSpeed.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnChangeCatSpeed;
                @Repair.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRepair;
                @Repair.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRepair;
                @Repair.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnRepair;
                @HideUI.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHideUI;
                @HideUI.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHideUI;
                @HideUI.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHideUI;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Walk.started += instance.OnWalk;
                @Walk.performed += instance.OnWalk;
                @Walk.canceled += instance.OnWalk;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Mouse.started += instance.OnMouse;
                @Mouse.performed += instance.OnMouse;
                @Mouse.canceled += instance.OnMouse;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @ChangeWeaponScroll.started += instance.OnChangeWeaponScroll;
                @ChangeWeaponScroll.performed += instance.OnChangeWeaponScroll;
                @ChangeWeaponScroll.canceled += instance.OnChangeWeaponScroll;
                @Fire.started += instance.OnFire;
                @Fire.performed += instance.OnFire;
                @Fire.canceled += instance.OnFire;
                @SwitchHands.started += instance.OnSwitchHands;
                @SwitchHands.performed += instance.OnSwitchHands;
                @SwitchHands.canceled += instance.OnSwitchHands;
                @Build.started += instance.OnBuild;
                @Build.performed += instance.OnBuild;
                @Build.canceled += instance.OnBuild;
                @FirePrimary.started += instance.OnFirePrimary;
                @FirePrimary.performed += instance.OnFirePrimary;
                @FirePrimary.canceled += instance.OnFirePrimary;
                @FireSecondary.started += instance.OnFireSecondary;
                @FireSecondary.performed += instance.OnFireSecondary;
                @FireSecondary.canceled += instance.OnFireSecondary;
                @WalkUp.started += instance.OnWalkUp;
                @WalkUp.performed += instance.OnWalkUp;
                @WalkUp.canceled += instance.OnWalkUp;
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @InteractWithChair.started += instance.OnInteractWithChair;
                @InteractWithChair.performed += instance.OnInteractWithChair;
                @InteractWithChair.canceled += instance.OnInteractWithChair;
                @ChangeCatSpeed.started += instance.OnChangeCatSpeed;
                @ChangeCatSpeed.performed += instance.OnChangeCatSpeed;
                @ChangeCatSpeed.canceled += instance.OnChangeCatSpeed;
                @Repair.started += instance.OnRepair;
                @Repair.performed += instance.OnRepair;
                @Repair.canceled += instance.OnRepair;
                @HideUI.started += instance.OnHideUI;
                @HideUI.performed += instance.OnHideUI;
                @HideUI.canceled += instance.OnHideUI;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_CursorSwitch;
    private readonly InputAction m_UI_MenuOpen;
    private readonly InputAction m_UI_CheatMenu;
    public struct UIActions
    {
        private @Controls m_Wrapper;
        public UIActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @CursorSwitch => m_Wrapper.m_UI_CursorSwitch;
        public InputAction @MenuOpen => m_Wrapper.m_UI_MenuOpen;
        public InputAction @CheatMenu => m_Wrapper.m_UI_CheatMenu;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @CursorSwitch.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCursorSwitch;
                @CursorSwitch.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCursorSwitch;
                @CursorSwitch.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCursorSwitch;
                @MenuOpen.started -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpen;
                @MenuOpen.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpen;
                @MenuOpen.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnMenuOpen;
                @CheatMenu.started -= m_Wrapper.m_UIActionsCallbackInterface.OnCheatMenu;
                @CheatMenu.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnCheatMenu;
                @CheatMenu.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnCheatMenu;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @CursorSwitch.started += instance.OnCursorSwitch;
                @CursorSwitch.performed += instance.OnCursorSwitch;
                @CursorSwitch.canceled += instance.OnCursorSwitch;
                @MenuOpen.started += instance.OnMenuOpen;
                @MenuOpen.performed += instance.OnMenuOpen;
                @MenuOpen.canceled += instance.OnMenuOpen;
                @CheatMenu.started += instance.OnCheatMenu;
                @CheatMenu.performed += instance.OnCheatMenu;
                @CheatMenu.canceled += instance.OnCheatMenu;
            }
        }
    }
    public UIActions @UI => new UIActions(this);

    // PlayerHandsWeapons
    private readonly InputActionMap m_PlayerHandsWeapons;
    private IPlayerHandsWeaponsActions m_PlayerHandsWeaponsActionsCallbackInterface;
    private readonly InputAction m_PlayerHandsWeapons__1;
    private readonly InputAction m_PlayerHandsWeapons__2;
    private readonly InputAction m_PlayerHandsWeapons__3;
    private readonly InputAction m_PlayerHandsWeapons__4;
    private readonly InputAction m_PlayerHandsWeapons__5;
    private readonly InputAction m_PlayerHandsWeapons__6;
    private readonly InputAction m_PlayerHandsWeapons__7;
    private readonly InputAction m_PlayerHandsWeapons__8;
    private readonly InputAction m_PlayerHandsWeapons__9;
    public struct PlayerHandsWeaponsActions
    {
        private @Controls m_Wrapper;
        public PlayerHandsWeaponsActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @_1 => m_Wrapper.m_PlayerHandsWeapons__1;
        public InputAction @_2 => m_Wrapper.m_PlayerHandsWeapons__2;
        public InputAction @_3 => m_Wrapper.m_PlayerHandsWeapons__3;
        public InputAction @_4 => m_Wrapper.m_PlayerHandsWeapons__4;
        public InputAction @_5 => m_Wrapper.m_PlayerHandsWeapons__5;
        public InputAction @_6 => m_Wrapper.m_PlayerHandsWeapons__6;
        public InputAction @_7 => m_Wrapper.m_PlayerHandsWeapons__7;
        public InputAction @_8 => m_Wrapper.m_PlayerHandsWeapons__8;
        public InputAction @_9 => m_Wrapper.m_PlayerHandsWeapons__9;
        public InputActionMap Get() { return m_Wrapper.m_PlayerHandsWeapons; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerHandsWeaponsActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerHandsWeaponsActions instance)
        {
            if (m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface != null)
            {
                @_1.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_1;
                @_1.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_1;
                @_1.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_1;
                @_2.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_2;
                @_2.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_2;
                @_2.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_2;
                @_3.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_3;
                @_3.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_3;
                @_3.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_3;
                @_4.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_4;
                @_4.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_4;
                @_4.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_4;
                @_5.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_5;
                @_5.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_5;
                @_5.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_5;
                @_6.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_6;
                @_6.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_6;
                @_6.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_6;
                @_7.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_7;
                @_7.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_7;
                @_7.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_7;
                @_8.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_8;
                @_8.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_8;
                @_8.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_8;
                @_9.started -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_9;
                @_9.performed -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_9;
                @_9.canceled -= m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface.On_9;
            }
            m_Wrapper.m_PlayerHandsWeaponsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @_1.started += instance.On_1;
                @_1.performed += instance.On_1;
                @_1.canceled += instance.On_1;
                @_2.started += instance.On_2;
                @_2.performed += instance.On_2;
                @_2.canceled += instance.On_2;
                @_3.started += instance.On_3;
                @_3.performed += instance.On_3;
                @_3.canceled += instance.On_3;
                @_4.started += instance.On_4;
                @_4.performed += instance.On_4;
                @_4.canceled += instance.On_4;
                @_5.started += instance.On_5;
                @_5.performed += instance.On_5;
                @_5.canceled += instance.On_5;
                @_6.started += instance.On_6;
                @_6.performed += instance.On_6;
                @_6.canceled += instance.On_6;
                @_7.started += instance.On_7;
                @_7.performed += instance.On_7;
                @_7.canceled += instance.On_7;
                @_8.started += instance.On_8;
                @_8.performed += instance.On_8;
                @_8.canceled += instance.On_8;
                @_9.started += instance.On_9;
                @_9.performed += instance.On_9;
                @_9.canceled += instance.On_9;
            }
        }
    }
    public PlayerHandsWeaponsActions @PlayerHandsWeapons => new PlayerHandsWeaponsActions(this);

    // WeaponEdit
    private readonly InputActionMap m_WeaponEdit;
    private IWeaponEditActions m_WeaponEditActionsCallbackInterface;
    private readonly InputAction m_WeaponEdit_OpenClose;
    public struct WeaponEditActions
    {
        private @Controls m_Wrapper;
        public WeaponEditActions(@Controls wrapper) { m_Wrapper = wrapper; }
        public InputAction @OpenClose => m_Wrapper.m_WeaponEdit_OpenClose;
        public InputActionMap Get() { return m_Wrapper.m_WeaponEdit; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WeaponEditActions set) { return set.Get(); }
        public void SetCallbacks(IWeaponEditActions instance)
        {
            if (m_Wrapper.m_WeaponEditActionsCallbackInterface != null)
            {
                @OpenClose.started -= m_Wrapper.m_WeaponEditActionsCallbackInterface.OnOpenClose;
                @OpenClose.performed -= m_Wrapper.m_WeaponEditActionsCallbackInterface.OnOpenClose;
                @OpenClose.canceled -= m_Wrapper.m_WeaponEditActionsCallbackInterface.OnOpenClose;
            }
            m_Wrapper.m_WeaponEditActionsCallbackInterface = instance;
            if (instance != null)
            {
                @OpenClose.started += instance.OnOpenClose;
                @OpenClose.performed += instance.OnOpenClose;
                @OpenClose.canceled += instance.OnOpenClose;
            }
        }
    }
    public WeaponEditActions @WeaponEdit => new WeaponEditActions(this);
    public interface IPlayerActions
    {
        void OnWalk(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMouse(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnChangeWeaponScroll(InputAction.CallbackContext context);
        void OnFire(InputAction.CallbackContext context);
        void OnSwitchHands(InputAction.CallbackContext context);
        void OnBuild(InputAction.CallbackContext context);
        void OnFirePrimary(InputAction.CallbackContext context);
        void OnFireSecondary(InputAction.CallbackContext context);
        void OnWalkUp(InputAction.CallbackContext context);
        void OnRotate(InputAction.CallbackContext context);
        void OnInteractWithChair(InputAction.CallbackContext context);
        void OnChangeCatSpeed(InputAction.CallbackContext context);
        void OnRepair(InputAction.CallbackContext context);
        void OnHideUI(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnCursorSwitch(InputAction.CallbackContext context);
        void OnMenuOpen(InputAction.CallbackContext context);
        void OnCheatMenu(InputAction.CallbackContext context);
    }
    public interface IPlayerHandsWeaponsActions
    {
        void On_1(InputAction.CallbackContext context);
        void On_2(InputAction.CallbackContext context);
        void On_3(InputAction.CallbackContext context);
        void On_4(InputAction.CallbackContext context);
        void On_5(InputAction.CallbackContext context);
        void On_6(InputAction.CallbackContext context);
        void On_7(InputAction.CallbackContext context);
        void On_8(InputAction.CallbackContext context);
        void On_9(InputAction.CallbackContext context);
    }
    public interface IWeaponEditActions
    {
        void OnOpenClose(InputAction.CallbackContext context);
    }
}
